/* tslint:disable */
/* eslint-disable */
/**
 * Plio.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { exists } from '@1023-ventures/darri-core';

import { 
    SupportTicketStatus, 
    SupportTicketStatusFromJSON, 
    SupportTicketStatusToJSON, 
} from './SupportTicketStatus';

export type SupportTicket = {
    /**
     * 
     * @type {string}
     * @memberof SupportTicket
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SupportTicket
     */
    concurrency?: string;
    /**
     * 
     * @type {string}
     * @memberof SupportTicket
     */
    changedBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof SupportTicket
     */
    changedOn?: Date;
    /**
     * 
     * @type {string}
     * @memberof SupportTicket
     */
    createdBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof SupportTicket
     */
    createdOn?: Date;
    /**
     * 
     * @type {string}
     * @memberof SupportTicket
     */
    ticketNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof SupportTicket
     */
    claimantUserId?: string;
    /**
     * 
     * @type {SupportTicketStatus}
     * @memberof SupportTicket
     */
    status?: SupportTicketStatus;
}

export const SupportTicketModel = {
    id: 'id',
    concurrency: 'concurrency',
    changedBy: 'changedBy',
    changedOn: 'changedOn',
    createdBy: 'createdBy',
    createdOn: 'createdOn',
    ticketNumber: 'ticketNumber',
    claimantUserId: 'claimantUserId',
    status: 'status',
    _metadata: {
        id: { type: 'string' },
        concurrency: { type: 'string' },
        changedBy: { type: 'string' },
        changedOn: { type: 'Date' },
        createdBy: { type: 'string' },
        createdOn: { type: 'Date' },
        ticketNumber: { type: 'string' },
        claimantUserId: { type: 'string' },
        status: { type: 'SupportTicketStatus' },
    }
}

export function SupportTicketFromJSON(json: any): SupportTicket {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'concurrency': !exists(json, 'concurrency') ? undefined : json['concurrency'],
        'changedBy': !exists(json, 'changedBy') ? undefined : json['changedBy'],
        'changedOn': !exists(json, 'changedOn') ? undefined : new Date(json['changedOn']),
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'createdOn': !exists(json, 'createdOn') ? undefined : new Date(json['createdOn']),
        'ticketNumber': !exists(json, 'ticketNumber') ? undefined : json['ticketNumber'],
        'claimantUserId': !exists(json, 'claimantUserId') ? undefined : json['claimantUserId'],
        'status': !exists(json, 'status') ? undefined : SupportTicketStatusFromJSON(json['status']),
        
    };
}

export function SupportTicketToJSON(value?: SupportTicket): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'concurrency': value.concurrency,
        'changedBy': value.changedBy,
        'changedOn': value.changedOn === undefined ? undefined : value.changedOn.toISOString(),
        'createdBy': value.createdBy,
        'createdOn': value.createdOn === undefined ? undefined : value.createdOn.toISOString(),
        'ticketNumber': value.ticketNumber,
        'claimantUserId': value.claimantUserId,
        'status': SupportTicketStatusToJSON(value.status),
        
    };
}


